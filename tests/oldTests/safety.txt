const Coins = 4
const Locks = 2
const W = 3

petrinet {
    Simple = (takeTea -> STOP).

    Two = (teaButton -> takeTea -> STOP).

    CM = (teaButton -> takeTea -> STOP | coffeeButton -> takeCoffee -> STOP).

    VM = (coin -> (teaBtn -> tea -> STOP | coffeeBtn -> coffee -> STOP)).
    VM2 = (coin -> teaBtn -> coffee -> STOP | coin -> coffeeBtn -> coffee -> STOP).

    Basic = (a -> (t -> b -> STOP | c -> STOP)).
    Bas = Basic\{t}.

    Tt = (takeTea -> Tt).

    BT = (teaButton -> takeTea -> BT).

    P = (a -> Q),
        Q = (b -> P | c -> Q).

    TrRed = (red -> TrRed | turnGreen -> TrGreen),
        TrGreen = (green -> TrGreen | turnRed -> TrRed).

    Parallel = ((a -> b -> c -> STOP) || (x -> y -> z -> STOP)).
    Parallel2 = ((a -> m -> c -> STOP) || (x -> m -> z -> STOP))\{m}.

    Buff = (in -> out -> Buff).
    B2 = (one:Buff || two:Buff).
    B3 = (one:Buff/{move/one.out} || two:Buff/{move/two.in}).
    B4 = B3\{move}.

    Money = C[1],
        C[i:1..Coins] = (when (i < Coins) coin -> C[i + 1] | when (i == Coins) coin -> C[1]).

    Lock = ([i:1..Locks].setLock -> L[i]),
        L[j:1..Locks] = ([i:1..Locks].enter -> (when (i == j) open -> close -> L[j] | when (i != j) error -> Lock)).

    Worker = (getTask -> doTask -> Worker).
    Workers = (forall [i:1..W] ([i]:Worker)).
    Farmer = F[1],
        F[i:1..W] = (when (i < W) [i].getTask -> F[i + 1] | when (i >= W) [i].getTask -> F[1]).
    Farm = (Farmer || Workers).
}

operation {
    automata(Simple) ~ automata(safe(Simple)).
    automata(Two) ~ automata(safe(Two)).
    automata(CM) ~ automata(safe(CM)).
    automata(VM) ~ automata(safe(VM)).
    automata(Basic) ~ automata(safe(Basic)).
    automata(Bas) ~ automata(safe(Bas)).
    automata(Tt) ~ automata(safe(Tt)).
    automata(BT) ~ automata(safe(BT)).
    automata(P) ~ automata(safe(P)).
    automata(TrRed) ~ automata(safe(TrRed)).
    automata(Parallel) ~ automata(safe(Parallel)).
    automata(Parallel2) ~ automata(safe(Parallel2)).
    automata(Buff) ~ automata(safe(Buff)).
    automata(B2) ~ automata(safe(B2)).
    automata(B3) ~ automata(safe(B3)).
    automata(B4) ~ automata(safe(B4)).
    automata(Money) ~ automata(safe(Money)).
    automata(Lock) ~ automata(safe(Lock)).
    automata(Worker) ~ automata(safe(Worker)).
    automata(Workers) ~ automata(safe(Workers)).
    automata(Farmer) ~ automata(safe(Farmer)).
    automata(Farm) ~ automata(safe(Farm)).
}